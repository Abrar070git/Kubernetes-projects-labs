QUESTION:

The Nautilus DevOps teams is planning to set up a Grafana tool to collect and analyze analytics from some applications. They are planning to deploy it on Kubernetes cluster. Below you can find more details.


1.) Create a deployment named grafana-deployment-datacenter using any grafana image for Grafana app. Set other parameters as per your choice.

2.) Create NodePort type service with nodePort 32000 to expose the app.

You need not to make any configuration changes inside the Grafana app once deployed, just make sure you are able to access the Grafana login page.

Note: The kubectl on jump_host has been configured to work with kubernetes cluster.

SOLUTION:

k create deploy grafana-deployment-datacenter --image=grafana --port=8087 --dry-run=client -oyaml > grafana-deployment-datacenter.yml

apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    app: grafana-deployment-datacenter
  name: grafana-deployment-datacenter
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana-deployment-datacenter
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: grafana-deployment-datacenter
    spec:
      containers:
      - image: grafana/grafana:latest
        name: grafana
        ports:
        - containerPort: 3000
        resources: {}
status: {}

apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    app: grafana-deployment-datacenter
  name: grafana-service
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 3000
    nodePort: 32000
  selector:
    app: grafana-deployment-datacenter
  type: NodePort
status:
  loadBalancer: {}


k port-forward deployments/grafana-deployment-datacenter 3000:3000

localhost:3000 
